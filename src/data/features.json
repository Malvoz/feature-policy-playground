[
  {
    "name": "geolocation",
    "description": "The *geolocation* policy controls whether the current document is allowed to use the [Geolocation interface](https://dev.w3.org/geo/api/spec-source.html).  If disabled in any document, calls to both [`getCurrentPosition`](https://dev.w3.org/geo/api/spec-source.html#get-current-position) and [`watchPosition`](https://dev.w3.org/geo/api/spec-source.html#watch-position) must result in the error callback being invoked with `PERMISSION_DENIED`.",
    "links": [
      { "rel": "policy-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/geolocation" },
      { "rel": "feature-spec", "href": "https://dev.w3.org/geo/api/spec-source.html", "note": "Geolocation API" }
    ],
    "tags": ["consent-required"]
  },
  {
    "name": "accelerometer",
    "description": "The sensor policies are *ambient-light-sensor*, *accelerometer*,  *gyroscope*, and *magnetometer*.\n\nA sensor feature controls access to a device sensor of a certain type requested either through an associated [Sensor](https://w3c.github.io/sensors/#the-sensor-interface)-based interface or through an event specified in the [DeviceOrientation Event Specification](https://www.w3.org/TR/orientation-event/).\n\nIf an interface (or an event) requires access to multiple sensors of different types than each of the corresponding sensor features MUST be allowed in order to use this interface. The table below shows which sensor features are required by the existing interfaces and events.",
    "links": [
      { "rel": "feature-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/API/Accelerometer", "note": "Accelerometer" },
      { "rel": "feature-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent", "note": "DeviceMotion" },
      { "rel": "policy-spec", "href": "https://github.com/w3c/webappsec-feature-policy/blob/master/features.md" }
    ],
    "tags": ["sensor"]
  },
  {
    "name": "midi",
    "desription": "The *midi* feature controls whether the current document is allowed to use the [Web MIDI API](https://webaudio.github.io/web-midi-api/).\n\nIf disabled in a document, the promise returned by [`requestMIDIAccess()`](https://webaudio.github.io/web-midi-api/#dom-navigator-requestmidiaccess) must reject with a `DOMException`",
    "links": [
      { "rel": "policy-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/midi" }
    ],
    "tags": ["consent-required"]
  },
  {
    "name": "payment",
    "description": "The *payment* feature controls whether the current document is allowed to use the [PaymentRequest interface](https://w3c.github.io/browser-payment-api/).\n\nIf disabled in a document, then calls to the [`PaymentRequest` constuctor](https://w3c.github.io/browser-payment-api/#constructor) MUST throw a `SecurityError`.",
    "links": [
      { "rel": "policy-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/payment" }
    ]
  },
  {
    "name": "magnetometer",
    "description": "The sensor policies are *ambient-light-sensor*, *accelerometer*,  *gyroscope*, and *magnetometer*.\n\nA sensor feature controls access to a device sensor of a certain type requested either through an associated [Sensor](https://w3c.github.io/sensors/#the-sensor-interface)-based interface or through an event specified in the [DeviceOrientation Event Specification](https://www.w3.org/TR/orientation-event/).\n\nIf an interface (or an event) requires access to multiple sensors of different types than each of the corresponding sensor features MUST be allowed in order to use this interface. The table below shows which sensor features are required by the existing interfaces and events.",
    "tags": ["sensor"]
  },
  {
    "name": "layout-animations",
    "description": "This policy controls the ability of a document to perform animations that require updates to **layout**, rather than simply *repaints*, which are typically cheaper and allow for smoother animations.  So-called 'layout animations' can require significant CPU and often cannot be rendered smoothly.\n\nIf a document is disallowed from performing layout animations by this policy, only the inital and final states of the animation will be rendered.",
    "tags": ["anitpattern", "performance"]
  },
  {
    "name": "vertical-scroll"
  },
  {
    "name": "camera",
    "description": "The *camera* policy controls access to video input devices requested through the [NavigatorUserMedia interface](https://w3c.github.io/mediacapture-main/getusermedia.html#navigatorusermedia).\n\nIf disabled in a document, then calls to [`getUserMedia()`](https://w3c.github.io/mediacapture-main/getusermedia.html#dom-mediadevices-getusermedia()) MUST NOT grant access to video input devices in that document.",
    "links":[
      { "rel": "policy-spec", "href": "https://github.com/w3c/webappsec-feature-policy/blob/master/features.md" },
      { "rel": "feature-spec", "href": "https://w3c.github.io/mediacapture-main/getusermedia.html#navigatorusermedia" },
      { "rel": "feature-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia" }
    ],
    "tags": ["consent-required"]
  },
  {
    "name": "usb",
    "tags": ["consent-required"]
  },
  {
    "name": "unoptimized-images",
    "tags": ["antipattern", "performance"]
  },
  {
    "name": "oversized-images",
    "description": "This policy allows a document to serve images whose dimensions are larger than the container in which they are rendered on the page.  Rendering images smaller than their native size is a waste of bandwidth and requires additional CPU.  By default, this policy is allowed, and images may be oversized by an unlimited margin, but documents which are disallowed from doing this, will be allowed to oversize by up to a factor of 2.  If this factor is exceeded by any image on the page, a placeholder image will be rendered instead.",
    "links": [
      { "rel": "policy-spec", "href": "https://github.com/w3c/webappsec-feature-policy/blob/master/policies/optimized-images.md" }
    ],
    "tags": ["antipattern", "performance"]
  },
  {
    "name": "legacy-image-formats",
    "tags": ["antipattern", "performance"]
  },
  {
    "name": "picture-in-picture"
  },
  {
    "name": "speaker",
    "tags": ["consent-required"]
  },
  {
    "name": "fullscreen"
  },
  {
    "name": "vr"
  },
  {
    "name": "document-domain",
    "description": "The `document-domain` policy controls whether the current document is allowed to set `document.domain`. When this policy is denied to the current document's origin, attempting to set `document.domain` will fail and cause a `SecurityError` `DOMException` to be be thrown.  Changing the value of `document.domain` used to be a common practice to allow cross-origin communication, before better mechanisms such as [postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) existed, and today there are virtually no good reasons to change it.",
    "links": [
      { "rel": "policy-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/document-domain" },
      { "rel": "policy-spec", "href": "https://html.spec.whatwg.org/multipage/infrastructure.html#document-domain-feature" },
      { "rel": "feature-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/API/Document/domain" }
    ],
    "tags": ["antipattern"]
  },
  {
    "name": "encrypted-media",
    "description": "The `encrypted-media` policy controls whether encrypted media extensions are available in the document.\n\nIf disabled, the promise returned by `requestMediaKeySystemAccess()` must return a promise which rejects with a `SecurityError` `DOMException` object as its parameter.",
    "links": [
      { "rel": "policy-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/encrypted-media" },
      { "rel": "policy-spec", "href": "https://github.com/w3c/webappsec-feature-policy/blob/master/features.md" },
      { "rel": "feature-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess" }
    ]
 },
  {
    "name": "autoplay",
    "description": "The *autoplay* feature controls access to autoplay of media requested through the [HTMLMediaElement interface](http://w3c.github.io/html/semantics-embedded-content.html#htmlmediaelement).\n\nIf disabled in a document, then calls to [`play()`](http://w3c.github.io/html/semantics-embedded-content.html#dom-htmlmediaelement-play) without a user gesture will reject the promise with a `NotAllowedError` DOMException object as its parameter. The [`autoplay`](http://w3c.github.io/html/semantics-embedded-content.html#dom-htmlmediaelement-autoplay) attribute will be ignored.",
    "links": [
      { "rel": "policy-spec", "href": "https://github.com/w3c/webappsec-feature-policy/blob/master/features.md" },
      { "rel": "feature-spec", "href": "http://w3c.github.io/html/semantics-embedded-content.html#htmlmediaelement" },
      { "rel": "policy-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/autoplay" },
      { "rel": "feature-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/autoplay" }
    ],
    "tags": ["antipattern"]
  },
  {
    "name": "wake-lock"
  },
  {
    "name": "font-display-late-swap",
    "tags": ["antipattern"]
  },
  {
    "name": "unsized-media",
    "description": "The `unsized-media` policy controls whether documents are allowed to resize images to their 'natural' size.\n\nWhen a document contains images or videos without explicit dimensions, the size is determined by reading the image data.  This takes time, and therefore causes the document layout to change when the image dimensions become known.  When a document is disallowed to use `unsized-media` with this policy, its `<img>`, `<video>`, and `<svg:image>` elements will adopt a default size (300px X 150px) and will not change size when the image data is loaded, providing a potentially less juddery user experience during page load.",
    "links": [
      { "rel": "policy-spec", "href": "https://github.com/w3c/webappsec-feature-policy/blob/master/policies/unsized-media.md" }
    ],
    "tags": ["antipattern"]
  },
  {
    "name": "ambient-light-sensor",
    "description": "The sensor policies are *ambient-light-sensor*, *accelerometer*,  *gyroscope*, and *magnetometer*.\n\nA sensor feature controls access to a device sensor of a certain type requested either through an associated [Sensor](https://w3c.github.io/sensors/#the-sensor-interface)-based interface or through an event specified in the [DeviceOrientation Event Specification](https://www.w3.org/TR/orientation-event/).\n\nIf an interface (or an event) requires access to multiple sensors of different types than each of the corresponding sensor features MUST be allowed in order to use this interface. The table below shows which sensor features are required by the existing interfaces and events.",
    "tags": ["sensor"]

  },
  {
    "name": "gyroscope",
    "description": "The sensor policies are *ambient-light-sensor*, *accelerometer*,  *gyroscope*, and *magnetometer*.\n\nA sensor feature controls access to a device sensor of a certain type requested either through an associated [Sensor](https://w3c.github.io/sensors/#the-sensor-interface)-based interface or through an event specified in the [DeviceOrientation Event Specification](https://www.w3.org/TR/orientation-event/).\n\nIf an interface (or an event) requires access to multiple sensors of different types than each of the corresponding sensor features MUST be allowed in order to use this interface. The table below shows which sensor features are required by the existing interfaces and events.",
    "tags": ["sensor"]
  },
  {
    "name": "document-write",
    "description": "When this policy is disabled, the APIs `document.write`, `document.writeln`, `document.open` and `document.close` will thow a `DOMException` when used.  These APIs have been around since the very early days of the web and using them is a bad idea because they dynamically rewrite your HTML markup and block parsing of the document.",
    "links": [
			{ "rel": "policy-spec", "href": "https://github.com/w3c/webappsec-feature-policy/blob/master/policies/document-write.md" },
			{ "rel": "feature-mdn", "href": "https://developer.mozilla.org/en-US/docs/Web/API/Document/write" },
			{ "rel": "feature-spec", "href": "https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-document-write" }
    ],
    "tags": ["antipattern", "performance"]
  },
  {
    "name": "lazyload",
    "description": "The `lazyload` policy grants the ability for a document to control whether assets are loaded lazily, ie. only when the user scrolls the docuement such that the asset is within the visible area of the viewport.\n\nIf the policy is enabled, or not specified, the document has full control over lazy-loading, using the [lazyload](https://docs.google.com/document/d/1e8ZbVyUwgIkQMvJma3kKUDg8UUkLRRdANStqKuOIvHg/edit) attribute of `<img>` and `<iframe>` tags.  If the policy is disabled, the user agent **will lazy-load all assets** regardless of the presence or value of any `lazyload` attribute on the element itself.",
    "links": [
      { "rel": "policy-spec", "href": "https://github.com/whatwg/html/pull/3752", "note": "Pull request" },
      { "rel": "feature-spec", "href": "https://docs.google.com/document/d/1e8ZbVyUwgIkQMvJma3kKUDg8UUkLRRdANStqKuOIvHg/edit", "note": "Google doc" }
    ],
    "notes": [
      "This policy controls a behaviour that is not standardised"
    ],
    "tags": ["performance"]
  },
  {
    "name": "sync-script",
    "tags": ["antipattern", "performance"]
  },
  {
    "name": "sync-xhr",
    "tags": ["antipattern", "performance"]
  },
  {
    "name": "microphone"
  }
]
